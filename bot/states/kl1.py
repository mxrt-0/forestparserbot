import typing_extensions
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from bot.bot import bot, router
from bot.keyboards.inline import kl1_menu_kb

class KleinanzeigenOne(StatesGroup):
    chat_id = State()
    message_id = State()
    banwords = State()
    min_view_count = State()
    max_view_count = State()
    min_price = State()
    max_price = State()


buttons = {
    1: ("–ë–∞–Ω–≤–æ—Ä–¥—ã", "kl1_banwords", "side_id"),
    2: ("–ö–æ–ª-–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫", "kl1_check_count", "check_count"),
    3: ("–ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ", "kl1_checks_every_n", "check_every_n"),
    4: ("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤", "kl1_min_views", "min_views"),
    5: ("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤", "kl1_max_views", "max_views"),
    6: ("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞", "kl1_max_price", "max_price"),
    7: ("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞", "kl1_min_price", "min_price"),
    8: ("–¢–æ–ª—å–∫–æ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π", "kl1_shipping", "shipping")
}


def kl1_main_caption(data):
    caption = [
        "<b>üï∏Ô∏è –ü–∞—Ä—Å–µ—Ä ‚åÑ\n"
        "üß≠ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Äî 1.0 ‚åÑ\n"
        "üåê –ü–ª–æ—â–∞–¥–∫–∞ ‚Äî "
        "<a href='https://www.kleinanzeigen.de'>kleinanzeigen.de</a> ‚åÑ\n\n"
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚åÑ</b>\n",
    ]
    for i in  range(1, len(buttons) + 1):
        text, _, key = buttons[i]
        value = data.get(key) or ""
        caption.append(
            f"<i>‚Ä¢ {text}:</i> <code>{escape(value)}</code>\n"
        )
    return "".join(caption)


async def back_to_kl1_menu(data):
    await bot.edit_message_caption(
        chat_id=data.get("chat_id"),
        message_id=data.get("message_id"),
        caption=kl1_main_caption(data),
        reply_markup=kl1_menu_kb(data)
    )


async def update_fsm(message: Message, state: FSMContext, key, value):
    await state.update_data({ key: value })

    data = await state.get_data()
    await back_to_kl1_menu(data)
    await message.delete()



@router.message(KleinanzeigenOne.banwords)
async def choose_banwords(message: Message, state: FSMContext):
    pass


@router.message(KleinanzeigenOne.min_view_count)
async def choose_min_view_count(message: Message, state: FSMContext):
    value = message.text
    data = state.get_data()
    max_view_count = data.get("max_view_count", 0)
    if value.isdigit() and int(max_view_count) > int(value):
        await update_fsm(message, state, "min_view_count", value)

@router.message(KleinanzeigenOne.max_view_count)
async def choose_max_view_count(message: Message, state: FSMContext):
    pass

@router.message(KleinanzeigenOne.min_price)
async def choose_min_price(message: Message, state: FSMContext):
    pass


@router.message(KleinanzeigenOne.max_price)
async def choose_max_price(message: Message, state: FSMContext):
    pass
